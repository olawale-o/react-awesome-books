{"version":3,"sources":["contextProvider/bookProvider.js","components/Book.js","components/BookList.js","components/AddBook.js","reduxStore/selectors/booksSelector.js","components/Tab.js","helpers/index.js","components/Header.js","components/Contact.js","components/Footer.js","views/Books.js","reduxStore/actions/action_creators.js","reduxStore/actions/action_types.js","App.js","reportWebVitals.js","reduxStore/appState.js","reduxStore/books/bookState.js","reduxStore/rootReducer.js","reduxStore/books/bookReducer.js","index.js","reduxStore/store.js"],"names":["BookContext","createContext","Book","id","title","author","removeBook","className","type","onClick","BookList","books","toggle","useContext","bookList","map","AddBook","addBookToStore","useState","setTitle","setAuthor","titleField","useRef","onSubmit","event","preventDefault","current","focus","ref","value","placeholder","required","onChange","target","selectBooks","state","Tab","name","onToggle","href","role","numberSuffix","num","toString","slice","Header","date","setDate","tabs","useEffect","interval","setInterval","today","DateTime","local","format","DATETIME_MED_WITH_SECONDS","month","modifiedDate","toLocaleString","split","dayNumber","parseInt","length","toLowerCase","join","clearInterval","Contact","Footer","year","now","Books","setToggle","useSelector","dispatchAction","useDispatch","index","Provider","bookId","payload","Date","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appState","rootReducer","combineReducers","action","filter","book","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a97421f2.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst BookContext = createContext();\n\nexport default BookContext;\n","import PropTypes from 'prop-types';\n\nconst Book = ({\n  id, title, author, removeBook,\n}) => (\n  <li id=\"book-id\" className=\"book-item\">\n    <div className=\"book\">\n      <div className=\"book__title-author\">\n        <h1 className=\"title\">{title}</h1>\n        <span className=\"by\">By</span>\n        <p className=\"authour\">{ author }</p>\n      </div>\n      <button className=\"btn\" type=\"button\" onClick={() => removeBook(id)}>Remove</button>\n    </div>\n  </li>\n);\n\nexport default Book;\n\nBook.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n};\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport BookContext from '../contextProvider/bookProvider';\nimport Book from './Book';\n\nconst BookList = ({ books, removeBook }) => {\n  const { toggle } = useContext(BookContext);\n  const bookList = books.map(({\n    id, title, author,\n  }) => (\n    <Book\n      key={id}\n      title={title}\n      author={author}\n      id={id}\n      removeBook={removeBook}\n    />\n  ));\n  return (\n    <div className={toggle === 1 ? 'books' : 'books hide'}>\n      <div className=\"book-heading\">\n        <h2>All awesome books</h2>\n      </div>\n      <ul className=\"list-of-books\">\n        { bookList }\n      </ul>\n    </div>\n  );\n};\n\nexport default BookList;\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  removeBook: PropTypes.func.isRequired,\n};\n","import { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport BookContext from '../contextProvider/bookProvider';\n\nconst AddBook = ({ addBookToStore }) => {\n  // This works if you switch to context provider\n  // const [ , dispatch] = useContext(BookContext);\n  const { toggle } = useContext(BookContext);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const titleField = useRef(null);\n\n  const handleAuthor = (event) => {\n    setAuthor(event.target.value);\n  };\n\n  const handleTitle = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addBookToStore({ title, author });\n    // use this when you switch to react context\n    // dispatch({ type: 'addBook', payload: {id: 3, title, author } });\n    setTitle('');\n    setAuthor('');\n    titleField.current.focus();\n  };\n\n  return (\n    <div className={toggle === 2 ? 'form' : 'form hide'} id=\"form\">\n      <h2>Add a new book</h2>\n      <form className=\"add-book-form\" id=\"add-book-form\" onSubmit={handleSubmit}>\n        <div>\n          <input type=\"text\" ref={titleField} value={title} placeholder=\"Title\" required onChange={handleTitle} />\n          <p id=\"title-error\" />\n        </div>\n        <div>\n          <input type=\"text\" value={author} placeholder=\"Author\" required onChange={handleAuthor} />\n          <p id=\"author-error\" />\n        </div>\n        <input type=\"submit\" value=\"Add\" id=\"add-book-button\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddBook;\n\nAddBook.propTypes = {\n  addBookToStore: PropTypes.func.isRequired,\n};\n","// use this when you not using combineReducer\n// export const booksSelector = state => state.books;\n\n// use this to select the content of your store when you using combineReducer\nexport const selectBooks = (state) => state.books.books;\nexport const totalBooks = (state) => state.books.books.length;\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport BookContext from '../contextProvider/bookProvider';\n\nconst Tab = ({ id, name }) => {\n  const { toggle, onToggle } = useContext(BookContext);\n  return (\n    <li key={id} className=\"nav-item\">\n      <a href=\"/#\" role=\"button\" className={toggle === id ? 'nav-link active' : 'nav-link'} onClick={() => onToggle(id)}>\n        {name}\n      </a>\n    </li>\n  );\n};\n\nexport default Tab;\n\nTab.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","const numberSuffix = (num) => {\n  if (num >= 11 && num <= 13) return 'th';\n\n  const lastDigit = num.toString().slice(-1);\n\n  switch (lastDigit) {\n    case '1': return 'st';\n    case '2': return 'nd';\n    case '3': return 'rd';\n    default: return 'th';\n  }\n};\n\nexport default numberSuffix;\n","import React, { useEffect, useState } from 'react';\nimport { DateTime } from 'luxon';\nimport Tab from './Tab';\nimport numberSuffix from '../helpers/index';\n\nconst Header = () => {\n  const [date, setDate] = useState(null);\n  const links = [\n    {\n      id: 1,\n      name: 'List books',\n    },\n    {\n      id: 2,\n      name: 'Add book',\n    },\n    {\n      id: 3,\n      name: 'Contact',\n    },\n  ];\n  const tabs = links.map(({\n    id, name,\n  }) => (\n    <Tab id={id} name={name} key={id} />\n  ));\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const today = DateTime.local();\n      const format = { ...DateTime.DATETIME_MED_WITH_SECONDS, month: 'long' };\n      const modifiedDate = today.toLocaleString(format).split(' ');\n      const dayNumber = parseInt(modifiedDate[1], 10);\n      modifiedDate[1] = dayNumber + numberSuffix(dayNumber);\n      modifiedDate[modifiedDate.length - 1] = (modifiedDate[modifiedDate.length - 1]).toLowerCase();\n      setDate(modifiedDate.join(' '));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return (\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <div className=\"logo\">\n          <a href=\"/#\">Awesome Books</a>\n        </div>\n        <ul className=\"nav-list\" id=\"nav-list\">{tabs}</ul>\n      </nav>\n      <p className=\"date\" id=\"date\">{date}</p>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useContext } from 'react';\nimport BookContext from '../contextProvider/bookProvider';\n\nconst Contact = () => {\n  const { toggle } = useContext(BookContext);\n  return (\n    <div className={toggle === 3 ? 'contacts' : 'contacts hide'} id=\"contacts\">\n      <h2>Contact information</h2>\n      <p className=\"contact_p\">\n        Do you have any questions or you just want to say\n        <q>Hello</q>\n        ?\n      </p>\n      <p className=\"contact_p\">You can reach out to us!</p>\n      <ul>\n        <li>\n          Our email:\n          <a href=\"mailto:support@awesomebooks.com\">\n            support@awesomebooks.com\n          </a>\n        </li>\n        <li>\n          Our phone number:\n          <a href=\"tel:0013586534422\">\n            0013586534422\n          </a>\n        </li>\n        <li>Our address: Wall Street 77, 84503 New York, USA</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport { DateTime } from 'luxon';\n\nfunction Footer() {\n  const { year } = DateTime.now();\n  return (\n    <footer className=\"footer\">\n      <div className=\"copyright\">\n        <p>\n          Copyright\n        </p>\n        <p>\n          All rights reserved\n          <span className=\"year\" id=\"year\">{year}</span>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BookList from '../components/BookList';\nimport AddBook from '../components/AddBook';\nimport BookContext from '../contextProvider/bookProvider';\nimport { addBook, removeBook } from '../reduxStore/actions/action_creators';\nimport { selectBooks } from '../reduxStore/selectors/booksSelector';\nimport Header from '../components/Header';\nimport Contact from '../components/Contact';\nimport Footer from '../components/Footer';\n\nconst Books = () => {\n  // enable this when you use useReducer Hook\n  // const [state, dispatch] = useReducer(bookReducer, initialState);\n  const [toggle, setToggle] = useState(1);\n  const books = useSelector(selectBooks);\n  // const booksLen = useSelector(totalBooks);\n  const dispatchAction = useDispatch();\n\n  const addBookToStore = ({ title, author }) => {\n    // use this when you use useReducer hook\n    // dispatch({ type: 'addBook', payload: {id: 3, title, author } });\n    dispatchAction(addBook({ id: new Date().toString(), title, author }));\n  };\n\n  // Use this when an init function is passed as a params to to useReducer\n  // const emptyBooks = () => dispatch({type: 'emptyBooks', payload: [] });\n\n  const onToggle = (index) => {\n    setToggle(index);\n  };\n\n  const onRemoveBook = (bookId) => {\n    dispatchAction(removeBook(bookId));\n  };\n\n  const state = {\n    toggle,\n    onToggle,\n  };\n  return (\n    <>\n      <BookContext.Provider value={state}>\n        <Header />\n        <main>\n          <section>\n            <BookList books={books} removeBook={onRemoveBook} />\n            <AddBook addBookToStore={addBookToStore} />\n            <Contact />\n          </section>\n        </main>\n        <Footer />\n      </BookContext.Provider>\n    </>\n  );\n};\n\nexport default Books;\n","import { ADD_BOOK, REMOVE_BOOK } from './action_types';\n\nexport const addBook = (payload) => ({\n  type: ADD_BOOK,\n  payload,\n});\n\nexport const removeBook = (payload) => ({\n  type: REMOVE_BOOK,\n  payload,\n});\n","export const ADD_BOOK = 'book/AddBook';\nexport const REMOVE_BOOK = 'book/removeBook';\n","import './App.css';\nimport Books from './views/Books';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Books />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import bookState from './books/bookState';\n\nconst appState = {\n  books: bookState,\n};\n\nexport default appState;\n","const bookState = [];\n\nexport default bookState;\n","import { combineReducers } from 'redux';\nimport bookReducer from './books/bookReducer';\n\nconst rootReducer = combineReducers({\n  books: bookReducer,\n});\n\nexport default rootReducer;\n","import appState from '../appState';\n\nexport default function bookReducer(state = appState, action) {\n  switch (action.type) {\n    case 'book/AddBook':\n      return { ...state, books: [...state.books, action.payload] };\n    case 'book/removeBook': {\n      const books = state.books.filter((book) => action.payload !== book.id);\n      return { books };\n    }\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configStore from './reduxStore/store';\n\nconst store = configStore;\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore } from '@reduxjs/toolkit';\n// import { createStore } from \"redux\";\nimport rootReducer from './rootReducer';\n\nconst configStore = configureStore({\n  reducer: rootReducer,\n  devTools: true,\n});\n\n// use this when you import createStore\n// const store = createStore(bookReducer);\n\nexport default configStore;\n"],"sourceRoot":""}